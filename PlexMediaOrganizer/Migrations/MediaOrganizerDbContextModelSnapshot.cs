// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlexMediaOrganizer.Data;

#nullable disable

namespace PlexMediaOrganizer.Migrations
{
    [DbContext(typeof(MediaOrganizerDbContext))]
    partial class MediaOrganizerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("PlexMediaOrganizer.Data.Entities.MediaItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Episode")
                        .HasColumnType("INTEGER");

                    b.Property<string>("EpisodeTitle")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("ImdbId")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("TEXT");

                    b.Property<string>("MediaType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int?>("Season")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int?>("TmdbId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TvdbId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ImdbId");

                    b.HasIndex("TmdbId");

                    b.HasIndex("TvdbId");

                    b.HasIndex("Title", "Year");

                    b.ToTable("MediaItems");
                });

            modelBuilder.Entity("PlexMediaOrganizer.Data.Entities.ProcessedFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DestinationPath")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("ErrorMessage")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("FileHash")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.Property<long>("FileSize")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MediaItemId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ProcessedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("SourcePath")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FileHash");

                    b.HasIndex("MediaItemId");

                    b.HasIndex("SourcePath");

                    b.ToTable("ProcessedFiles");
                });

            modelBuilder.Entity("PlexMediaOrganizer.Data.Entities.ProcessedFile", b =>
                {
                    b.HasOne("PlexMediaOrganizer.Data.Entities.MediaItem", "MediaItem")
                        .WithMany("Files")
                        .HasForeignKey("MediaItemId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("MediaItem");
                });

            modelBuilder.Entity("PlexMediaOrganizer.Data.Entities.MediaItem", b =>
                {
                    b.Navigation("Files");
                });
#pragma warning restore 612, 618
        }
    }
}
